{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Get Started!","text":"<p> Build a custom data-catalog in minutes </p> <p></p>"},{"location":"#1-what-is-catalogbuilder","title":"\ud83d\udd0d\ufe0f 1. What is CatalogBuilder?","text":"<ul> <li>CatalogBuilder is a simple tool to generate &amp; deploy a documentation website for your data assets.</li> <li>It enables anyone at your company to quickly find the trusted data they are looking for. </li> </ul>"},{"location":"#2-why-catalogbuilder","title":"\ud83d\udca1  2. Why CatalogBuilder?","text":"<p>There are many open-source projects (admundsen, open-metadata, datahub, metacat, atlas) to build such a catalog in-house. But as they offer a lot of advanced features, they are hard to manage and deploy if you're not a tech expert. They can be even harder to customize. </p> <p>dbt docs is great to generate a documentation website on top of your dbt assets but:</p> <ul> <li>it focuses on dbt only (while you are interested in other sources + metadata)</li> <li>is very hard to customize (except you're an angular expert)</li> <li>can be slow.</li> </ul> <p></p> <p>\ud83d\udc49 CatalogBuilder aims at offering a lightweight alternative to generate a documentation website on top of your data assets. It focuses on read-only data discovery and:</p> <ol> <li>\u2714\ufe0f can be easily customized and deployed by low tech people</li> <li>\u2714\ufe0f can then handle the very specific needs of your company</li> <li>\u2714\ufe0f is fast and lightweight</li> <li>\u2714\ufe0f is built on top of the very famous mkdocs-material python library which is used by millions of developers to deploy their documentation (such as fastapi).</li> </ol> <p></p>"},{"location":"#3-getting-started-with-catalog-cli","title":"\ud83d\udca5 3. Getting Started with <code>catalog</code> CLI","text":"<p><code>catalog</code> is the CLI (command-line-interface) of CatalogBuilder to generate, show &amp; deploy the documentation.</p>"},{"location":"#31-install-catalog-cli","title":"3.1 Install <code>catalog</code> CLI \ud83d\udee0\ufe0f","text":"<pre><code>pip install catalog-builder\n</code></pre>"},{"location":"#32-create-your-first-documentation-configuration","title":"3.2 Create your first documentation configuration \ud83d\udc68\u200d\ud83d\udcbb","text":"<pre><code>catalog download bigquery_public_data\n</code></pre> <p>To get started, let's download  a catalog configuration example from the GitHub repo and play with it. The above command will download the <code>catalogs/bigquery_public_data</code> folder on your laptop.</p> <p>You will find in the folder:</p> <ul> <li><code>assets file</code>: a file containing the list of the assets you want to put in your documentation. It can be a parquet file named <code>assets.parquet</code> or a json lines file named  <code>assets.jsonl</code>. Each asset in the file must have the following fields:</li> <li><code>asset_type</code>: for example: <code>table</code>.</li> <li><code>documentation_path</code>: the path of the asset page in the generated documentation. For example <code>dataset_name/table_name</code>.</li> <li><code>data</code>: a dict of attributes used to generate the documentation. For example <code>{\"name\": \"foo\"}</code></li> <li><code>generate_assets_file.py</code>: the python script used to (re)generate the <code>assets file</code>.</li> <li><code>requirements.txt</code>: the python requirements needed by <code>generate_assets_file.py</code>.</li> <li><code>templates</code>: a folder which includes a jinja-template markdown-file for each <code>asset_type</code>. These templates are used to generate a markdown documentation file for each asset.</li> <li><code>mkdocs.yml</code>: the mkdocs configuration file used by mkdocs to build the documentation website from the generated markdown files.</li> </ul>"},{"location":"#33-build-your-catalog-website","title":"3.3 Build your catalog website \ud83d\udc7e","text":"<pre><code>catalog build bigquery_public_data\n</code></pre> <ol> <li>For each asset of the <code>assets file</code>, the jinja template of <code>asset_type</code> will be rendered using the asset <code>data</code> to generate a markdown file which will be written into <code>catalogs/bigquery_public_data/docs/</code> at <code>documentation_path</code>.</li> <li>Mkdocs will then build the documentation website from the markdown files into <code>catalogs/bigquery_public_data/site</code> (using <code>mkdocs.yml</code> configuration file).</li> </ol>"},{"location":"#34-run-your-catalog-website-locally","title":"3.4 Run your catalog website locally \u26a1","text":"<pre><code>catalog serve bigquery_public_data\n</code></pre> <p>You can now see the generated documentation website at http://localhost:8000.</p>"},{"location":"#35-deploy-the-documentation-website","title":"3.5 Deploy the documentation website! \ud83d\ude80","text":"<p>A. To deploy on GitHub pages:</p> <pre><code>catalog gh-deploy bigquery_public_data\n</code></pre> <p>Mkdocs will deploy the site on GitHub pages (this only works if you are on a github repository).</p> <p>B. To deploy elsewhere:</p> <p>You can follow these instructions from mkdocs.</p> <p></p>"},{"location":"#4-generate-your-dbt-documentation","title":"\ud83d\udc8e 4. Generate your dbt documentation","text":"<p>To generate a documentation website for your own dbt project, do the following:</p> <ol> <li>Change directory to your dbt project directory</li> <li>Download <code>catalogs/dbt</code> documentation example by running <code>catalog download dbt</code>.</li> <li>Run <code>dbt docs generate</code> to compute <code>target/manifest.json</code> and <code>target/catalog.json</code>.</li> <li>Generate the assets file by running <code>python catalogs/dbt/generate_assets_file.py</code>. The script will parse <code>target/manifest.json</code> and <code>target/catalog.json</code> to generate the <code>assets file</code> in the expected format.</li> <li>Run <code>catalog serve dbt</code> to build the website and show it locally.</li> </ol> <p></p>"},{"location":"#keep-in-touch","title":"Keep in touch \ud83e\uddd1\u200d\ud83d\udcbb","text":"<p>Join our Slack for any question, to get help for getting started, to speak about a bug, to suggest improvements, or simply if you want to have a chat \ud83d\ude42.</p> <p></p>"},{"location":"#contribute","title":"\ud83d\udc4b Contribute","text":"<p>Any contribution is more than welcome \ud83e\udd17! - Add a \u2b50 on the repo to show your support - Join our Slack and talk with us - Raise an issue to raise a bug or suggest improvements - Open a PR! </p>"},{"location":"TODO/","title":"Deploy","text":"<pre><code>gcloud storage buckets create gs://catalogs.unytics.io --project unytics\ngcloud storage cp -r site gs://catalogs.unytics.io/bigquery_public_data\ngcloud storage buckets add-iam-policy-binding gs://catalogs.unytics.io --member=allUsers --role=roles/storage.objectViewer --project unytics\ngcloud storage buckets update gs://catalogs.unytics.io --web-main-page-suffix=index.html --web-error-page=404.html --project unytics\n</code></pre>"},{"location":"TODO/#deploy-pages","title":"Deploy pages","text":"<pre><code>mkdocs gh-deploy --config-file mkdocs.yml\n</code></pre>"},{"location":"TODO/#contenu","title":"Contenu","text":"<ul> <li>ne pas mettre les datasets vides</li> <li>mettre meilleur format pour nombre de lignes. Size: un seul chiffre apr\u00e8s la virgule</li> <li>components scorecards (contient le style)</li> <li>mettre une s\u00e9rie de chiffres en haut de la homepage</li> <li>mettre le bon dataset dans le bouton open in bigquery</li> <li>related tables: Customers who use this product also use the following products</li> </ul>"},{"location":"catalogs/bigquery_public_data/","title":"BigQuery Public Datasets","text":"<p>Catalog of all active BigQuery Public Tables (*we call active the tables which have been updated the latest 30 months)</p>"},{"location":"catalogs/bigquery_public_data/templates/dataset/","title":"{{ name }}","text":"<p>Description</p> <p>{{ (description or 'No description') | indent(4, false, true) }}</p> <p>Tables</p> table infos {% for table in tables -%} {{ table.name }}{{ table.description }} Last modified at: {{ table.last_modified_at }}Nb Rows: {{ table.row_count }}Size: {{ table.size }}Is partitioned: {{ table.partition_column != '' }}Created at:{{ table.created_at }} {% endfor -%}"},{"location":"catalogs/bigquery_public_data/templates/homepage/","title":"BigQuery Public Datasets","text":"<p>Description</p> <p>Catalog of all active BigQuery Public Tables (ie tables from bigquery-public-data project which have been updated during the latest 30 months)</p> <p>Datasets</p> <p>{% for dataset in datasets %} - {{ dataset }}</p>"},{"location":"catalogs/bigquery_public_data/templates/table/","title":"{{ name }}","text":"<p>Last modified at</p> <p>{{ last_modified_at }}</p> <p>Created at</p> <p>{{ created_at }}</p> <p>Nb Rows</p> <p>{{ row_count }}</p> <p>Size</p> <p>{{ size }}</p> <p>Description</p> <p>{{ (description or 'No description') | indent(4, false, true) }}</p> <p>Open in BigQuery \ud83e\udc52</p> <p>Columns</p> Column Type Description {% for column in columns -%} <code>{{ column.name }}</code> <code>{{ column.data_type }}</code> {{ column.description }} {% endfor %}"}]}